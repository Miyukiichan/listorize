// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using listorize.Model;

#nullable disable

namespace listorize.Migrations
{
    [DbContext(typeof(ListorizeContext))]
    partial class ListorizeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.7");

            modelBuilder.Entity("listorize.Model.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ChildItemId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("NoteId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ParentItemId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ChildItemId");

                    b.HasIndex("NoteId");

                    b.HasIndex("ParentItemId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("listorize.Model.ItemColumn", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ColumnType")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ItemId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("LookupId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("LookupId");

                    b.ToTable("ItemColumns");
                });

            modelBuilder.Entity("listorize.Model.ItemValue", b =>
                {
                    b.Property<int>("ItemId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ItemColumnId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ItemId", "ItemColumnId");

                    b.HasIndex("ItemColumnId");

                    b.ToTable("ItemValues");
                });

            modelBuilder.Entity("listorize.Model.Lookup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Lookups");
                });

            modelBuilder.Entity("listorize.Model.LookupOption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("LookupId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("LookupId");

                    b.ToTable("LookupOptions");
                });

            modelBuilder.Entity("listorize.Model.Note", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Notes");
                });

            modelBuilder.Entity("listorize.Model.Item", b =>
                {
                    b.HasOne("listorize.Model.Item", "ChildItem")
                        .WithMany()
                        .HasForeignKey("ChildItemId");

                    b.HasOne("listorize.Model.Note", "Note")
                        .WithMany()
                        .HasForeignKey("NoteId");

                    b.HasOne("listorize.Model.Item", "ParentItem")
                        .WithMany()
                        .HasForeignKey("ParentItemId");

                    b.Navigation("ChildItem");

                    b.Navigation("Note");

                    b.Navigation("ParentItem");
                });

            modelBuilder.Entity("listorize.Model.ItemColumn", b =>
                {
                    b.HasOne("listorize.Model.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("listorize.Model.Lookup", "Lookup")
                        .WithMany()
                        .HasForeignKey("LookupId");

                    b.Navigation("Item");

                    b.Navigation("Lookup");
                });

            modelBuilder.Entity("listorize.Model.ItemValue", b =>
                {
                    b.HasOne("listorize.Model.ItemColumn", "ItemColumn")
                        .WithMany()
                        .HasForeignKey("ItemColumnId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("listorize.Model.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("ItemColumn");
                });

            modelBuilder.Entity("listorize.Model.LookupOption", b =>
                {
                    b.HasOne("listorize.Model.Lookup", "Lookup")
                        .WithMany()
                        .HasForeignKey("LookupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lookup");
                });
#pragma warning restore 612, 618
        }
    }
}
